// Code generated by mockery v2.42.1. DO NOT EDIT.

package deploy

import (
	domain "github.com/ichenhe/cert-deployer/domain"
	mock "github.com/stretchr/testify/mock"
)

// MockassetDeployer is an autogenerated mock type for the assetDeployer type
type MockassetDeployer struct {
	mock.Mock
}

type MockassetDeployer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockassetDeployer) EXPECT() *MockassetDeployer_Expecter {
	return &MockassetDeployer_Expecter{mock: &_m.Mock}
}

// deployToAsset provides a mock function with given fields: deployer, assetType, assetId, cert, key
func (_m *MockassetDeployer) deployToAsset(deployer domain.Deployer, assetType domain.AssetType, assetId string, cert []byte, key []byte) error {
	ret := _m.Called(deployer, assetType, assetId, cert, key)

	if len(ret) == 0 {
		panic("no return value specified for deployToAsset")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.Deployer, domain.AssetType, string, []byte, []byte) error); ok {
		r0 = rf(deployer, assetType, assetId, cert, key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockassetDeployer_deployToAsset_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'deployToAsset'
type MockassetDeployer_deployToAsset_Call struct {
	*mock.Call
}

// deployToAsset is a helper method to define mock.On call
//   - deployer domain.Deployer
//   - assetType domain.AssetType
//   - assetId string
//   - cert []byte
//   - key []byte
func (_e *MockassetDeployer_Expecter) deployToAsset(deployer interface{}, assetType interface{}, assetId interface{}, cert interface{}, key interface{}) *MockassetDeployer_deployToAsset_Call {
	return &MockassetDeployer_deployToAsset_Call{Call: _e.mock.On("deployToAsset", deployer, assetType, assetId, cert, key)}
}

func (_c *MockassetDeployer_deployToAsset_Call) Run(run func(deployer domain.Deployer, assetType domain.AssetType, assetId string, cert []byte, key []byte)) *MockassetDeployer_deployToAsset_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(domain.Deployer), args[1].(domain.AssetType), args[2].(string), args[3].([]byte), args[4].([]byte))
	})
	return _c
}

func (_c *MockassetDeployer_deployToAsset_Call) Return(_a0 error) *MockassetDeployer_deployToAsset_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockassetDeployer_deployToAsset_Call) RunAndReturn(run func(domain.Deployer, domain.AssetType, string, []byte, []byte) error) *MockassetDeployer_deployToAsset_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockassetDeployer creates a new instance of MockassetDeployer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockassetDeployer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockassetDeployer {
	mock := &MockassetDeployer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
